#!/bin/sh
TERM="urxvt -e"
DMENU="	dmenu \
	-fn terminal:pixelsize=13:bold \
	-nb "#efefef" \
	-nf "#00dd00" \
	-sb "#ff0000" \
	-sf "#ffffff" \
	"
CACHE=${XDG_CACHE_HOME:-$HOME/.cache}/dmenu-recent-apps
mkdir -p ${XDG_CACHE_HOME:-$HOME/.cache}
CONFIG=${XDG_CONFIG_HOME:-$HOME/.config}/dmenu
mkdir -p $CONFIG
touch $CONFIG/apps-term
touch $CONFIG/apps-bg
touch $CONFIG/apps-sudo

MOST_USED=`sort $CACHE 2>/dev/null | uniq -c | sort -rn | colrm 1 8`
RUN=`(echo "$MOST_USED"; dmenu_path | grep -vxF "$MOST_USED") | $DMENU -p Execute: "$@"` || exit
RUN=`echo $RUN | sed "s/~/\/home\/leo/g"`

# figure out how to run the command based on the first word.  Note that this does not support
# a bg/term decision based on further arguments (although you could easily add that)
word0=${RUN%% *} 
match="^$word0$"

(echo $word0; head -n 99 $CACHE 2>/dev/null) > $CACHE.$$
mv $CACHE.$$ $CACHE

while ! grep -q $match $CONFIG/apps-term $CONFIG/apps-bg $CONFIG/apps-sudo
do
    type=$(echo "term\nbg\nsudo" | $DMENU -p type)
    [ $type = bg -o $type = term -o $type = sudo ] || continue
    echo $word0 >> $CONFIG/apps-$type
done

grep -q $match $CONFIG/apps-term && RUN="$TERM $RUN"
grep -q $match $CONFIG/apps-bg && RUN=$RUN 
grep -q $match $CONFIG/apps-sudo && RUN="$TERM sudo $RUN"

$RUN
